// ConsoleApplication5.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <string>


//--------------------------------KLASA 1-----------------------------------
class Student {
	std::string name;
	int age;
	char sex;

public:
	void setName(std::string name);
	void setAge(int age);
	void setSex(char sex);
	std::string getName();
	int getAge();
	char getSex();

	void printGrade();
	void printClass();

};

void Student::setName(std::string name) {
	this->name = name;
}
void Student::setAge(int age) {
	this->age = age;
}
void Student::setSex(char sex) {
	this->sex = sex;
}

std::string Student::getName() {
	return name;
}
int Student::getAge() {
	return age;
}
char Student::getSex() {
	return sex;
}

void Student::printGrade() {
	std::cout << "\n\n" << this->name << " got grade F!\n";
}

void Student::printClass() {
	std::cout << "\n\n" << this->name << ", " << this->age << " is taking programming class!\n";
}

void zadatak1() {
	Student josip;
	josip.setName("Josip");
	josip.setAge(29);
	josip.setSex('m');

	josip.printGrade();
	josip.printClass();
}

//--------------------------------------------------------------------------

//--------------------------------KLASA 2-----------------------------------

class Car {
	std::string brand;
	int chassis;
	std::string model;

public:
	void setBrand(std::string brand);
	void setChassis(int chassis);
	void setModel(std::string model);
	std::string getBrand();
	int getChassis();
	std::string getModel();

	void printSpeed();
	void printRoad();
};

void Car::setBrand(std::string brand) {
	this->brand = brand;
}
void Car::setChassis(int chassis) {
	this->chassis = chassis;
}
void Car::setModel(std::string model) {
	this->model = model;
}

std::string Car::getBrand() {
	return brand;
}
int Car::getChassis() {
	return chassis;
}
std::string Car::getModel() {
	return model;
}

void Car::printSpeed() {
	std::cout << "\n\n" << this->brand << ", " << this->model << " is going 120km/h!\n";
}

void Car::printRoad() {
	std::cout << "\n\n" << this->brand << ", " << this->chassis << " is taking roadway A1 Rijeka - Zagreb!\n";
}

void zadatak2() {
	Car peugeot;
	peugeot.setBrand("Peugeot");
	peugeot.setChassis(657804437);
	peugeot.setModel("307");

	peugeot.printSpeed();
	peugeot.printRoad();
}


//--------------------------------------------------------------------------

//--------------------------------KLASA 3-----------------------------------

class Account {
protected:
	int account_number;
	int account_balance;

public:
	void withdraw_money(int amount);
	void deposit_money(int amount);

	void set_account_number(int account_number);
	void set_account_ballance(int account_balance);
	int get_account_number();
	int get_account_balance();

	Account();

};

Account::Account() {
	account_number = 0;
	account_balance = 0;
}

void Account::withdraw_money(int amount) {
	account_balance += amount;
	std::cout << "\nYou withdrew " << amount << " money.\nCurrent balance = " << account_balance;
}
void Account::deposit_money(int amount) {
	account_balance -= amount;
	std::cout << "\nYou deposited " << amount << " money.\nCurrent balance = " << account_balance;
}

void Account::set_account_number(int account_number) {
	this->account_number = account_number;
}
void Account::set_account_ballance(int account_balance) {
	this->account_balance = account_balance;
}
int Account::get_account_number() {
	return account_number;
}
int Account::get_account_balance(){
	return account_balance;
}

//Stedni racun
class SavingsAccount : public Account {
	int time_elapsed;
	int interest_rate;

public:
	void set_time_elapsed(int time_elapsed);
	void set_interest_rate(int interest_rate);
	int get_time_elapsed();
	int get_interest_rate();

	void withdraw_money(int amount);
};

void SavingsAccount::set_time_elapsed(int time_elapsed) {
	this->time_elapsed = time_elapsed;
}
void SavingsAccount::set_interest_rate(int interest_rate) {
	this->interest_rate = interest_rate;
}
int SavingsAccount::get_time_elapsed() {
	return time_elapsed;
}
int SavingsAccount::get_interest_rate() {
	return interest_rate;
}

void SavingsAccount::withdraw_money(int amount) {
	if (time_elapsed > 12) {
		int temp = account_balance * (interest_rate / 100);
		temp -= amount;
		account_balance = temp;
	}
	else
		account_balance -= amount;
	
}

//tekuci racun
class CurrentAccount : public Account {
	int time_elapsed;
	int interest_rate;

public:
	void set_time_elapsed(int time_elapsed);
	void set_interest_rate(int interest_rate);
	int get_time_elapsed();
	int get_interest_rate();

};

void CurrentAccount::set_time_elapsed(int time_elapsed) {
	this->time_elapsed = time_elapsed;
}
void CurrentAccount::set_interest_rate(int interest_rate) {
	this->interest_rate = interest_rate;
}
int CurrentAccount::get_time_elapsed() {
	return time_elapsed;
}
int CurrentAccount::get_interest_rate() {
	return interest_rate;
}

void zadatak3() {
	Account josip;
	//SavingsAccount josip;

	josip.set_account_number(10007171);
	josip.set_account_ballance(2000);
	
	std::cout << "\nCurrent balance on " << josip.get_account_number();
	std::cout << " is " << josip.get_account_balance() << ". \n";
}



//--------------------------------------------------------------------------


int main()
{
	//zadatak1();
	//zadatak2();
	zadatak3();
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
