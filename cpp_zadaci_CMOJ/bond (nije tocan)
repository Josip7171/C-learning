/*
Tajni agent Bond, James Bond, je opet dobio zadatak da spasi svijet. Ovaj put mora pobijediti tajanstvenog protivnika u jednoj matematičkoj igri. Dok on istražuje mjesto okršaja, zamolio je Tebe da mu napišeš program za ovu igru koji bi on onda samo pokretati na svom novom iPad-u.

Kako se igra ova igra? Igrač dobije točno šest prirodnih brojeva koji tijekom igre ne mijenjaju svoju poziciju. Od prvih pet zadanih brojeva, korištenjem četiri osnovne matematičke operacije: + (zbrajanje), − (oduzimanje), \* (množenje), / (cjelobrojno dijeljenje), igrač treba složiti izraz čija de vrijednost nakon evaluacije biti jednaka šestom zadanom broju. Prilikom evaluacije izraza se ne poštuju prioriteti operatora ved evaluacija izraza ide redom s lijeva na desno. Npr. 2+3*5=25.

Za rješavanje ovog problema, Bond de modi koristiti 2 metode. To su:

prva metoda: traženi izraz se može složiti korištenjem samo jednog od operatora;
druga metoda: traženi izraz se slaže uz pomod svih operatora koji se mogu ponavljati;
Pomozi Bondu da opet spasi svijet. Izraz de uvijek biti mogude složiti na samo jedan način.

Ulazni podaci
Šest prirodnih brojeva A, B, C, D, E, F (1≤A,B,C,D,E,F≤100), svaki u svom retku;

Izlazni podaci
Traženi izraz iz zadatka zapisan u obliku A∘B∘C∘D∘E=F, gdje je ∘ jedan od operatora;

Primjeri test podataka
Ulaz
Copy
7
9
13
5
11
45
Izlaz
Copy
7+9+13+5+11=45
Ulaz
Copy
3
5
7
11
13
39
Izlaz
Copy
3+5+7+11+13=39
*/

#include <iostream>

int main()
{
	int konacni_broj1 = 0, konacni_broj2 = 0, unos = 0, broj[5];
	for (int i = 0; i < 5; i++) {
		std::cin >> unos;
		broj[i] = unos;
		konacni_broj1 += unos;
	}
	std::cin >> unos;
	for (int i = 0; i < 4; i++) {
		if ((((broj[0] * broj[1]) / broj[2]) + broj[3]) - broj[4] == unos) {
			konacni_broj2 = (((broj[0] + broj[1]) - broj[2]) * broj[3]) / broj[4];
		}
		else if (unos == (((broj[0] - broj[1]) + broj[2]) * broj[3]) / broj[4]) {
			konacni_broj2 = (((broj[0] - broj[1]) + broj[2]) * broj[3]) / broj[4];
		}
		else if (unos == (((broj[0] - broj[1]) + broj[2]) * broj[3]) / broj[4]) {
			konacni_broj2 = (((broj[0] - broj[1]) + broj[2]) * broj[3]) / broj[4];
		}
	}
	konacni_broj2 = (((broj[0] + broj[1]) - broj[2]) * broj[3]) / broj[4];
	if (konacni_broj1 == unos) {
		std::cout << broj[0] << "+" << broj[1] << "+" << broj[2] << "+" << broj[3] << "+" << broj[4] << "=" << unos;
	}
	else if (konacni_broj2 == unos) {
		std::cout << broj[0] << "+" << broj[1] << "-" << broj[2] << "*" << broj[3] << "/" << broj[4] << "=" << unos;
	}
}
