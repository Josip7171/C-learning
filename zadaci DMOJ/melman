/*
Melman, najpoznatija žirafa „Madagaskara“, ima problema sa zdravljem. Zapravo nema, ali on se stalno žali da ga nešto boli i da ima temperaturu. Zbog toga su mu njegovi prijatelji za roñendan kupili poseban toplomjer. On se nosi oko vrata i svakih pola sata izmjeri tjelesnu temperaturu. Ovaj toplomjer ima jednu dodatnu mogućnost. On pamti najveću izmjerenu temperaturu nakon prvog mjerenja i točno vrijeme kada je ta temperatura izmjerena. Napiši program koji će za zadano vrijeme prvog mjerenja te vrijednosti temperatura u sljedećih N mjerenja, odrediti i ispisati najveću izmjerenu temperaturu i točno vrijeme kada je ta temperatura izmjerena. Napomena: posljednje zabilježeno mjerenje dogodit će se unutar istog dana kao i prvo mjerenje. Postojat će samo jedna najveća izmjerena temperatura.

Ulazni podaci
U prvom retku nalazi se jedan cijeli broj S (0 ≤ S ≤ 23), sat u kome je zabilježeno prvo mjerenje temperature.
U drugom retku nalazi se jedan cijeli broj M (0 ≤ M ≤ 59), minuta u kojoj je zabilježeno prvo mjerenje temperature.
U trećem retku nalazi se jedan prirodan broj N (1 ≤ N ≤ 10), koliko je još puta toplomjer izmjerio temperaturu.
U sljedećih N redaka nalazi se po jedan prirodan broj T (1 ≤ T ≤ 50), vrijednost izmjerene temperature u svakom sljedećem mjerenju.
Izlazni podaci
U jednom retku treba ispisati najveću izmjerenu temperaturu. U drugom retku treba ispisati sat, a u trećem minutu u kojoj je izmjerena ta najveća temperatura.

Primjeri test podataka
Ulaz
Copy
9
0
3
45
12
23
Izlaz
Copy
45
9
30
*/

#include <iostream>
int main (){
	int first_measure_hour = 0, first_measure_minute = 0, number_of_measures = 0;
	int measured_temp = 0, time_counter = 0, max_temp = 0, marker = 0;

	std::cin >> first_measure_hour >> first_measure_minute >> number_of_measures;
	time_counter = first_measure_hour*60 + first_measure_minute;
	for(int i = 0; i < number_of_measures; i++){
		std::cin >> measured_temp;
		time_counter +=30;
		if(measured_temp > max_temp){
			max_temp = measured_temp;
			marker = i;
		}
	}
	int final_time = time_counter - ((number_of_measures - marker-1) * 30);
	//netreba ukupno vrijeme nego ono vrijeme kada je izmjerena najvisa temperatura, prepraviti kod !!!!!
	std::cout << max_temp << std::endl << final_time / 60 << std::endl << final_time% 60;
}